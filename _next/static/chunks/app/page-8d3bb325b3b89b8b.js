(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[974],{4596:(e,n,o)=>{Promise.resolve().then(o.bind(o,9208)),Promise.resolve().then(o.bind(o,8452)),Promise.resolve().then(o.t.bind(o,8173,23))},9208:(e,n,o)=>{"use strict";o.d(n,{Canvas:()=>l});var t=o(5155),r=o(2115);function l(e){let{className:n,squareSize:l=12,gapSize:a=4,mobileSizeMultiplier:c=.75,blinkProbability:s=.25,freqRange:u=[.1,.3]}=e,f=(0,r.useRef)(null),_=(0,r.useRef)(null),[d,m]=(0,r.useState)(null);return(0,r.useEffect)(()=>{let{current:e}=f;if(e&&!d){let n=getComputedStyle(document.documentElement),t=n.getPropertyValue("--color-light-blue"),r=n.getPropertyValue("--color-website");o.e(814).then(o.bind(o,5814)).then(n=>{let{default:o}=n,l=new o(e);l.load("#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float u_time;\nuniform vec2 u_resolution;\nuniform vec3 u_color_background;\nuniform vec3 u_color_square;\nuniform float u_square_size;\nuniform float u_gap_size;\nuniform float u_blink_probability;\nuniform float u_min_flicker_freq;\nuniform float u_max_flicker_freq;\n\n// A simple hash function to generate a pseudo-random value from a 2D coordinate.\nfloat random(vec2 st, float seed) {\n  return fract(sin(dot(st, vec2(12.9898, 78.233) + seed)) * 43.758);\n}\n\nvoid main() {\n  // Get pixel coordinate with an origin at the top left corner of the canvas.\n  vec2 uv = vec2(gl_FragCoord.x, u_resolution.y - gl_FragCoord.y);\n\n  // Rotate the grid 45\xb0 around the top left corner of the canvas.\n  float angle = 3.14159 / 4.0;  // 45\xb0 in radians.\n  mat2 rot = mat2(cos(angle), -sin(angle),\n                sin(angle),  cos(angle));\n  uv = rot * uv;\n\n  float squareSize = u_square_size;\n  float cellSize = u_square_size + u_gap_size;\n  \n  // Determine which cell we're in and the local position within that cell.\n  vec2 cell = floor(uv / cellSize);\n  vec2 cellPos = mod(uv, cellSize);\n  \n  // If the current pixel is within the gap area, output the background color (black).\n  if(cellPos.x >= squareSize || cellPos.y >= squareSize) {\n    gl_FragColor = vec4(u_color_background, 1.0);\n    return;\n  }\n  \n  // Generate a random value for the cell.\n  float rnd = random(cell, 0.0);\n  // Set a frequency range for slow blinking: from 0.2Hz to 0.5Hz.\n  float freq = mix(u_min_flicker_freq, u_max_flicker_freq, rnd);\n  // Move the time randomly forward for each cell\n  float time = u_time + 123.456 * rnd;\n  // Compute a phase value that includes a random phase offset.\n  float phase = time * 2.0 * 3.14159 * freq + rnd * 6.28318;\n \n  // Compute an integer-like cycle count for the blink.\n  // This increases by 1 each blink cycle.\n  // Derive the cycle count from the phase (each full 2Ï€ period is one cycle).\n  float cycle = floor(phase / (2.0 * 3.14159));\n  \n  // Choose the target color based on the cycle.\n  bool isBrightCycle = (mod(cycle, 1.0 / u_blink_probability) < 1.0);\n  vec3 targetColor = isBrightCycle ? u_color_square : u_color_square / 2.0;\n\n  // Compute a smooth blink value that oscillates between 0.0 and 1.0.\n  // The sine wave is scaled and offset to yield a smooth transition.\n  float blink = sin(phase) * 0.5 + 0.5;\n\n  // Use the blink value to determine the color of the square.\n  vec3 color = mix(u_color_background, targetColor, blink);\n  gl_FragColor = vec4(color, 1.0);\n}\n"),l.setUniform("u_color_background",...i(r)),l.setUniform("u_color_square",...i(t)),l.play(),m(l)}).catch(e=>{console.error(e)})}return()=>{d&&d.destroy()}},[f,d]),(0,r.useEffect)(()=>{let e=getComputedStyle(document.documentElement).getPropertyValue("--breakpoint-xl");d&&(d.setUniform("u_min_flicker_freq",u[0]),d.setUniform("u_max_flicker_freq",u[1]),d.setUniform("u_blink_probability",s));let n=()=>{let n=window.innerWidth<parseInt(e.replace("px",""))?c:1;d&&(d.setUniform("u_square_size",l*n*window.devicePixelRatio),d.setUniform("u_gap_size",a*n*window.devicePixelRatio))};return window.addEventListener("resize",n),n(),()=>{window.removeEventListener("resize",n)}},[d,u,s,l,a,c]),(0,t.jsx)("div",{ref:_,className:n,children:(0,t.jsx)("canvas",{ref:f,className:d?"w-full h-full":""})})}function i(e){return[parseInt(e.slice(1,3),16)/255,parseInt(e.slice(3,5),16)/255,parseInt(e.slice(5,7),16)/255]}}},e=>{var n=n=>e(e.s=n);e.O(0,[173,452,441,517,358],()=>n(4596)),_N_E=e.O()}]);